Pacjent:
  actAs:
    Timestampable:    ~
  columns:
    imie:             { type: string(20), notnull: true }
    nazwisko:         { type: string(50), notnull: true }
    pesel:            { type: string(11), notnull: true, unique: true }
    data_urodzenia:   { type: date, notnull: true }
    plec:             { type: enum, values: [m, k] }
    wzrost:           { type: smallint, notnull: true }
    waga:             { type: decimal(5), scale: 2, notnull: true }
    reka:             { type: enum, values: [p, l, o] }

Badanie:
  columns:
    pacjent_id:       { type: integer(8) }
    data_badania:     { type: date, notnull: true }
    inne:             { type: string(255) }
    menstruacja:      { type: boolean, default: false }
  relations:
    Pacjent:
      local:          pacjent_id
      onDelete:       CASCADE
      foreignAlias:   Badania

Uzywka:
  columns:
    badanie_id:       { type: integer(8) }
    typ:              { type: enum, values: [ap, bp, np, aa, iu] } # ap-aktywne palenie, bp-bierne palenie, np-nie palacy, ap-aktywnie pijacy, iu - inne używki
  relations:
    Badanie:
      local:          badanie_id
      onDelete:       CASCADE
      foreignAlias:   Uzywki

TypCechy:
  actAs:
    Sluggable:
      fields:         [nazwa]
      length:         30
  columns:
    nazwa:            { type: string(30), notnull: true, unique: true }
    typ:              { type: enum, values: [decimal, date, bool, string], notnull: true }

Cecha:
  columns:
    uzywka_id:        { type: integer(8) }
    typ_cechy_id:     { type: integer(8) }
    wartosc:          { type: string(255), notnull: true }
  relations:
    Uzywka:
      local:          uzywka_id
      onDelete:       CASCADE
      foreignAlias:   Cechy
    TypCechy:
      local:          typ_cechy_id
      onDelete:       CASCADE

WynikBadania:
  columns:
    ocena_stanu_guza: { type: enum, values: [wz, pr, stg, bcg] }
    badanie_id:       { type: integer(8) }
  relations:
    Badanie:
      local:          badanie_id
      onDelete:       CASCADE
      foreignType:    one

Widmo:
  columns:
    skala_ppm:        { type: clob }
    widmo:            { type: clob }
    linia_bazowa:     { type: clob }
    widmo_bazowa:     { type: clob }
    lokalizacja:      { type: enum, values: [wz, isc, isp] } # wz - wzgórze, isc - istota szara czołowa, isp - istota szara potyliczna
    rozmiar_voxela_x: { type: decimal(5), scale: 2, notnull: true }
    rozmiar_voxela_y: { type: decimal(5), scale: 2, notnull: true }
    rozmiar_voxela_z: { type: decimal(5), scale: 2, notnull: true }
    stezenia:         { type: clob }
    te:               { type: integer }
    tr:               { type: integer }
    ns:               { type: integer }
    wynik_id:         { type: integer(8) }
  relations:
    WynikBadania:
      local:          wynik_id
      foreignAlias:   Widma

Radioterapia:
  columns:
    data_rozpoczecia: { type: date }
    dawka_fr:         { type: decimal(5), scale: 2 }
    dawka_total:      { type: decimal(5), scale: 2 }
    data_zakonczenia: { type: date }
    stereo:           { type: boolean }
    gtv:              { type: int }
    ctv:              { type: int }
    ptv:              { type: int }
    pacjent_id:       { type: int(8) }
  relations:
    Pacjent:
      local:          pacjent_id
      onDelete:       CASCADE

Lek:
  columns:
    nazwa_leku:       { type: string(255) }
    rodzaj:           { type: enum, values: [a, c, i] } # a - na alergię, c - do chemioterapii, i - inne

Chemioterapia:
  columns:
    data_rozpoczecia: { type: date }
    data_zakonczenia: { type: date }
    lek_id:           { type: integer(8) }
    pacjent_id:       { type: integer(8) }
  relations:
    Lek:
      local:          lek_id
    Pacjent:
      local:          pacjent_id
      foreignAlias:   Chemioterapie
      onDelete:       CASCADE

Dieta:
  columns:
    badanie_id:                     { type: integer(8)  }
    bezmiesna:                      { type: boolean }
    zroznicowana:                   { type: boolean }
    najczesciej_spozywane_produkty: { type: clob }
  relations:
    Badanie:
      local:          badanie_id
      onDelete:       CASCADE
      foreignType:    one

Produkt:
  columns:
    nazwa:            { type: string(255) }

DietaProdukt:
  columns:
    dieta_id:         { type: integer(8) }
    produkt_id:       { type: integer(8) }
    duza_ilosc:       { type: boolean }
  relations:
    Dieta:
      local:          dieta_id
      onDelete:       CASCADE
    Produkt:
      local:          produkt_id
      onDelete:       CASCADE

